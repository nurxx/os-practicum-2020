Прочетете внимателно цялото условие и всички забележки, преди да започнете да
мислите по задачата.

********************************************************************************
* Въведение                                                                    *
********************************************************************************

Дадени са няколко файла, съдържащи таблични данни за разпространението на
коронавируса COVID-19 в Китай към дата 2020-03-04. Всеки ред от файловете
съдържа стойности, разделени със запетайки.

Семантиката на файловете по колони е следната:

city.csv: <име на град>,<английско име на град>
province.csv: <име на провинция>,<английско име на провинция>
city_province.csv: <име на град>,<име на провинция, в която се намира този град>
spread.csv: <име на град>,<брой заподозрени случаи>,<брой регистрирани случаи>,<брой смъртни случаи>

Под "ниво на смъртност" ще имаме предвид цялата стойност на смъртността в промили,
т.е. (<брой смъртни случаи> / <брой регистрирани случаи>) * 1000,
закръглено надолу целочислено.


********************************************************************************
* a)                                                                           *
********************************************************************************

Напишете shell script `wuhan.sh`, който изписва броя смъртни случаи в града
с английско име `Wuhan`.

Примерно извикване:

    $ bash wuhan.sh
    2227


********************************************************************************
* b)                                                                           *
********************************************************************************

Напишете shell script `top_cities.sh`, който извлича десетте града с най-високо
ниво на смъртност, за които има поне 101 регистрирани случая,
и за всеки от тях извежда името на града и нивото на смъртност,
разделени с двоеточие и интервал и сортирани по ниво на смъртност.

Примерно извикване:
    $ bash top_cities.sh
    武汉: 104
    潜江: 73
    荆门: 62
    鄂州: 58
    宜昌: 57
    黄冈: 51
    孝感: 50
    黄石: 47
    随州: 46
    荆州: 43


********************************************************************************
* c)                                                                           *
********************************************************************************

Напишете shell script `top_provinces.sh`, който извлича десетте провинции с най-високо
общо ниво на смъртност, като за всяка от тях извежда името на провинцията и нивото
на смъртност, разделени с двоеточие и интервал.

Примерно извикване:
    $ bash top_provinces.sh
    新疆维吾尔自治区: 96
    湖北省: 82
    黑龙江省: 36
    海南省: 33
    天津市: 27
    甘肃省: 23
    河北省: 20
    河南省: 18
    贵州省: 17
    重庆市: 13


********************************************************************************
* d)    (бонус за допълнителни точки)                                          *
********************************************************************************

Напишете shell script-ове `top_cities_en.sh` и `top_provinces_en.sh`,
които работят аналогично на `top_cities.sh` и `top_provinces.sh`, обаче след
имената на градове или провинции извеждат в скоби и тяхното английско име.

Примерни извиквания:
    $ bash top_cities_en.sh
    武汉 (Wuhan): 104
    潜江 (Qianjiang): 73
    荆门 (Jingmen): 62
    鄂州 (Ezhou): 58
    宜昌 (Yichang): 57
    黄冈 (Huanggang): 51
    孝感 (Xiaogan): 50
    黄石 (Huangshi): 47
    随州 (Suizhou): 46
    荆州 (Jingzhou): 43

    $ bash top_provinces_en.sh
    新疆维吾尔自治区 (Xinjiang): 96
    湖北省 (Hubei): 82
    黑龙江省 (Heilongjiang): 36
    海南省 (Hainan): 33
    天津市 (Tianjin): 27
    甘肃省 (Gansu): 23
    河北省 (Hebei): 20
    河南省 (Henan): 18
    贵州省 (Guizhou): 17
    重庆市 (Chongqing): 13


********************************************************************************
* Мета-бонуси                                                                  *
********************************************************************************

Мета-бонус 1 (2 т.):
Предайте домашно, в което единствените използвани bash конструкции са:
    - pipe
    - subshell
    - subshell с пренасочване
В частност, без да използвате променливи, if и цикли.

Мета-бонус 2 (2 т.):
Предайте домашно, в което не са използвани никакви временни файлове.

За да получите точки по мета-бонусите, е нужно да имате поне по един минаващ
автоматичен тест на a) и b).


********************************************************************************
* Допълнителна информация                                                      *
********************************************************************************

Забележки:
    - приемете, че дадените файлове се намират в текущата директория
    - shell script-овете не приемат аргументи
    - част от точките се дават за "автоматични тестове". Това значи, че скриптовете
      ви ще бъдат извикани ТОЧНО както в дадените примери, и се очаква да върнат
      ТОЧНО искания резултат. В частност, ако сте направили която и да е от
      следните грешки, няма да получите точки за автоматични тестове:
        - грешно име на скрипт
        - грешна структура или формат на предадения архив
        - грешно форматиране на изхода

Гаранции:
    - няма нужда да правите проверки за верен вход
    - всеки от дадените файлове има равен брой стойности във всичките си редове
    - всеки град, срещнат в spread.csv, се среща точно веднъж в city.csv
    - всеки град, срещнат в city.csv, се среща точно веднъж в spread.csv
    - всеки град, срещнат в city.csv, се среща точно веднъж в city_province.csv
    - всеки град, срещнат в city_province.csv, се среща точно веднъж в city.csv

Подсказки:
    - командите `awk`, `sort`, `join`, `bc` биха се оказали полезни
    - ще ви е по-лесно, ако не започвате да пишете решението си в последния момент
    - четете man страници!
